<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on erri120's very random Blog</title><link>https://erri120.github.io/posts/</link><description>Recent content in Posts on erri120's very random Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>CC BY 4.0</copyright><lastBuildDate>Fri, 10 Dec 2021 10:00:00 +0100</lastBuildDate><atom:link href="https://erri120.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Fixing Anno 2070 by changing three bytes</title><link>https://erri120.github.io/posts/2021-12-10/</link><pubDate>Fri, 10 Dec 2021 10:00:00 +0100</pubDate><guid>https://erri120.github.io/posts/2021-12-10/</guid><description>I love Anno 2070. The game released in 2011 and I bought the Königsedition, a special deluxe edition containing the base game, the Deep Ocean DLC, a poster and the entire soundtrack on 3 CDs, back in 2013. I played this game to death, it is my most played strategy game and I have often look back at the fun I had while playing. If you never played the game and went on Steam you might notice it has a Mixed rating.</description><content>&lt;p>I love Anno 2070. The game released in 2011 and I bought the &lt;em>Königsedition&lt;/em>, a special deluxe edition containing the base game, the &lt;em>Deep Ocean&lt;/em> DLC, a poster and the entire soundtrack on 3 CDs, back in 2013. I played this game to death, it is my most played strategy game and I have often look back at the fun I had while playing. If you never played the game and went on Steam you might notice it has a &lt;em>Mixed&lt;/em> rating. This might seem weird considering I just told you how awesome this game is. But the ratings reflect the current state very well: you can&amp;rsquo;t fucking play the game.&lt;/p>
&lt;h2 id="why-the-game-is-unplayable">Why the game is unplayable&lt;/h2>
&lt;p>Did you think Cyberpunk 2077 at launch was bad with all the glitches and bugs? At least you could play that game and somewhat enjoy it. Now look at this 10 year old game that you can&amp;rsquo;t even fucking play and Ubisoft completely abandoned it. A studio abandoning their games is nothing new and often not a problem. It might suck that the multipler servers of your favourite game go offline but you could at least continue playing the campaign or the community might start hosting servers.&lt;/p>
&lt;p>So what do I mean with &amp;ldquo;you can&amp;rsquo;t fucking play the game&amp;rdquo;? Let&amp;rsquo;s imagine an obstacle course where the finish is the main menu of the game. To get to the main menu you first have to start the game either through Uplay, Steam or by starting the &lt;code>Anno5.exe&lt;/code> directly. The first obstacle is Uplay itself. I can not count the number of times Uplay had some error or bug that lead to me not playing a game. Back when Assassins Creed Unity came out, Uplay thought my saves were ephemeral and I had to replay the first 5 hours of the game more than 13 times. The launcher is a complete dumpster fire and worse than the League of Legends client.&lt;/p>
&lt;p>If you start Anno 2070 then Uplay will also launch and probably kill the process and start the Auto Updater. If that happens you are fucked because now the &amp;ldquo;Auto Updater&amp;rdquo; will try to auto update your game, even though it&amp;rsquo;s already updated. Once it&amp;rsquo;s done &lt;em>updating&lt;/em> it will start the game which will start Uplay which will probably start the updater again. If you bought the game on Steam then you have to flip a coin and if it lands on heads you are fucked and Uplay doesn&amp;rsquo;t think you own the game. If you somehow did manage to convince Uplay to work for once you are now faced with the login screen.&lt;/p>
&lt;p>The login screen. You open a website, click the login button, enter your username + password and log in to your account. But why do you have to log in to your account in Anno 2070? Some time around 2013 Ubisoft had the genius idea of switching up their entire account system. Anno 2070 was caught up in the transition and somehow came out as an abomination where the login is more broken than Fallout 76 on release &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. So what username + password do you use in Anno 2070? If you think you have to use your Uplay account then you&amp;rsquo;re wrong. If you choose your Steam credentials then you are also wrong. You have to use the credentials of the account you used to register the game. In my case it&amp;rsquo;s not my main Uplay account because it didn&amp;rsquo;t even existed back then. Now here is the fun part: I still own the game on Uplay. It is in my library but I can&amp;rsquo;t use my account because the &lt;em>key&lt;/em> is not linked to my actual Uplay account. I put emphasis on &lt;em>key&lt;/em> because that is our next hurdle. Even if you manage to log in you will probably be asked about the key however your key might be linked to another account even though that account doesn&amp;rsquo;t have the game in their Uplay library. I don&amp;rsquo;t even know how this exactly works with Steam users but I can imagine it doesn&amp;rsquo;t.&lt;/p>
&lt;p>I hope you come to understand how utterly broken the start procedure of Anno 2070 is. Back in the day when Ubisoft used something called &lt;em>SolidShield&lt;/em> the process was even more fucked. Your key was not only tied to some random account but also to your hardware directly meaning if you upgraded your GTX 580 to a GTX 590 your key would not work &lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. If you somehow think this is just the rabbling of an insane person then you are correct but I would also like you to check out the Steam reviews and this great post on reddit &amp;ldquo;&lt;a href="https://www.reddit.com/r/CrackWatch/comments/7wejnm/ubisofts_anno_2070_unplayable_due_to_drm/">Ubisoft&amp;rsquo;s Anno 2070 Unplayable Due to DRM&lt;/a>&amp;rdquo; for more salt.&lt;/p>
&lt;h2 id="fixing-the-game">Fixing the game&lt;/h2>
&lt;p>Now that I cooled off and finished my rant it&amp;rsquo;s time to talk about how we can fix everything. If you want to follow along you need to get the latest version from Uplay or Steam. It has the version number &lt;code>2.0.7792.0&lt;/code> and the SHA256 hash of &lt;code>Anno5.exe&lt;/code> is &lt;code>C76D42E71AF6A7D1786C6846091A5FBDDB13E3A88A72E469F36F9F365645D58A&lt;/code>. If you don&amp;rsquo;t want an explanation of how I got here you can skip to the &lt;a href="#tldr-if-you-dont-want-an-explanation">TL;DR&lt;/a> but if you want to hear the explanation then knowing assembly and basic programming is recommended.&lt;/p>
&lt;p>The goal is to force the game into offline mode. Simply changing your firewall settings to block all connections from the executable is not the solution because, as explained earlier, we also need to deal with Uplay. There is actually a single function responsible for launching Uplay. The standard solution would be to either replace the function with &lt;code>NOP&lt;/code> instructions or replace the &lt;code>CALL&lt;/code> instruction with &lt;code>NOP&lt;/code>. This would probably work, however I found something better. This &lt;code>InitializeUplay&lt;/code> function gets called only once: during a pre-init function of the game inside a condition. There is actually a &lt;code>JNZ&lt;/code> instruction which will skip the function call entirely.&lt;/p>
&lt;p>The comparison at &lt;code>004b05bf&lt;/code> (&lt;code>80 7e 50 00 bb 10 00 00 00&lt;/code>) compares whatever is at &lt;code>ESI+50&lt;/code> with &lt;code>0&lt;/code> meaning that the &lt;code>JNZ&lt;/code> jump at &lt;code>004b05c8&lt;/code> will be taken if &lt;code>ESI+50&lt;/code> is not &lt;code>0&lt;/code>. This is never the case and I don&amp;rsquo;t really understand what the condition actually represents but we can exploit this and make sure the jump is always taken. Since &lt;code>ESI+50&lt;/code> is always &lt;code>0&lt;/code> we can just change the comparison to compare &lt;code>ESI+50&lt;/code> with &lt;code>1&lt;/code>: &lt;code>80 7e 50 01&lt;/code>. With this you can launch the game and Uplay will never start.&lt;/p>
&lt;p>Next up is the login screen. This took me the longest to figure out. I found the Uplay initialization within a few hours but this took me an entire day. We can&amp;rsquo;t really skip the login screen, trust me I tried that, but instead we just have to trick the game that we are offline and want to play in offline mode. I used to play a lot in offline and back in the day you still had to put your username + password and click login at which point the game will see you are offline and then loads your offline profile. So now it&amp;rsquo;s time to find the callback function of the login button. I did manage to find the callback function and noticed a little function that returns a &lt;code>WebAdapter&lt;/code> based on the argument. Lets name this function &lt;code>CreateWebAdapter(int x)&lt;/code> with &lt;code>x = 0&lt;/code> returning an &lt;strong>offline web adapter&lt;/strong> and &lt;code>x = 1&lt;/code> the normal one.&lt;/p>
&lt;p>My spidey senses were tingling and I knew this was related to the solution. The login button callback function however will always call &lt;code>CreateWebAdapter(1)&lt;/code>. You could change the &lt;code>1&lt;/code> to a &lt;code>0&lt;/code> but I noticed something different. You see, the login frame is created programmatically and you can clearly see where the username textbox, password textbox, remember user id checkbox, register account button and login button get added to the frame. In order to figure out which button has what callback I put a breakpoint on every callback function and clicked every button. However there was 1 &lt;em>unused&lt;/em> button. I&amp;rsquo;m not sure if it&amp;rsquo;s unused or only conditionally used but guess what function the callback calls: &lt;code>CreateWebAdapter(0)&lt;/code>. This possibly unused callback function was very similar to the login button callback but it will always use the offline web adapter. I was very excited when I found out about this and immediately changed the callback function of the login button to use the callback function of the unused button by changing the &lt;code>PUSH&lt;/code> instruction at &lt;code>0068a57b&lt;/code> from &lt;code>68 90 9c 68 00&lt;/code> to &lt;code>68 d0 8f 68 00&lt;/code> and it fucking worked. You can now log in and start in offline mode.&lt;/p>
&lt;img src="https://erri120.github.io/img/posts/2021-12-10/Anno_2070_Main_Menu.jpg" alt="Anno 2070 Main Menu" class="left" />
&lt;h3 id="tldr-if-you-dont-want-an-explanation">TL;DR if you don&amp;rsquo;t want an explanation&lt;/h3>
&lt;ol>
&lt;li>Change the &lt;code>CMP&lt;/code> instruction at &lt;code>004b05bf&lt;/code> (&lt;code>80 7e 50 00 bb 10 00 00 00&lt;/code>) from &lt;code>80 7e 50 00&lt;/code> to &lt;code>80 7e 50 01&lt;/code>&lt;/li>
&lt;li>Change the &lt;code>PUSH&lt;/code> instruction at &lt;code>0068a57b&lt;/code> from &lt;code>68 90 9c 68 00&lt;/code> to &lt;code>68 d0 8f 68 00&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>If you did everything right the SHA256 hash of the modified &lt;code>Anno5.exe&lt;/code> file should be &lt;code>01E123A72C3DCB4FB1E018A685692F57B9586FF4F187BB23B09D8B93D754C268&lt;/code>. If that is not the case you did something wrong and your game is probably broken so load your backup and try again.&lt;/p>
&lt;h2 id="anno-2070-setting-tips">Anno 2070 setting tips&lt;/h2>
&lt;p>In case you want to play Anno 2070 after reading this post here are some changes you might want to make in your settings file. The file is located in &lt;code>%appdata%/Ubisoft/Anno 2070/Config/Engine.ini&lt;/code>&lt;/p>
&lt;ul>
&lt;li>change language by editing &lt;code>&amp;lt;LanguageTAG&amp;gt;ger&amp;lt;/LanguageTAG&amp;gt;&lt;/code>&lt;/li>
&lt;li>skip the intro with &lt;code>&amp;lt;SkipIntro&amp;gt;1&amp;lt;/SkipIntro&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="afterword">Afterword&lt;/h2>
&lt;p>This project has been a lot of fun and ended rather suddenly. I initially allotted 3 full days to this endeavour but I kept finding new leads and getting new ideas so I ended up only spending around 12.5 hours (I love how x32dbg will tell you how much time you have wasted debugging). The solution is also very simple and I made it the title of this post. Just 3 bytes to fix the entire start of the game. I thought I would have to modify a lot functions or write some DLL I&amp;rsquo;d have to inject but no, you just change 3 bytes and be happy :)&lt;/p>
&lt;p>I hope you found this post somewhat interesting and maybe you can finally play Anno 2070. If this works for you please do tell me below.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://www.youtube.com/watch?v=T6HdBplLmuU">https://www.youtube.com/watch?v=T6HdBplLmuU&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>&lt;a href="https://www.guru3d.com/news-story/why-guru3d-probably-never-will-review-ubisoft-titles-anymore-anno-2070.html">https://www.guru3d.com/news-story/why-guru3d-probably-never-will-review-ubisoft-titles-anymore-anno-2070.html&lt;/a>&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></content></item><item><title>Reworking rpgmpacker: Moving from C++ to TypeScript</title><link>https://erri120.github.io/posts/2021-11-18/</link><pubDate>Thu, 18 Nov 2021 12:18:00 +0100</pubDate><guid>https://erri120.github.io/posts/2021-11-18/</guid><description>rpgmpacker has been one of my biggest non-modding related projects on GitHub and the only reason people visit my blog:
The developer of the game Star Knightess Aura (NSFW) is the first actual user of this tool and contributed a good amount of issues on GitHub driving the development of this project forward.
With some issues still open I stopped working on this project in April 2021 because I knew I had to rework this tool at some point and didn&amp;rsquo;t had the motivation to do so at that time.</description><content>&lt;p>&lt;a href="https://github.com/erri120/rpgmpacker">rpgmpacker&lt;/a> has been one of my biggest non-modding related projects on GitHub and the only reason people visit my blog:&lt;/p>
&lt;img src="https://erri120.github.io/img/posts/2021-11-18/Blog-Performance.png" alt="Top queries of my blog" class="left" />
&lt;p>The developer of the game &lt;a href="https://aura-dev.itch.io/star-knightess-aura">Star Knightess Aura (NSFW)&lt;/a> is the first actual user of this tool and contributed a good amount of &lt;a href="https://github.com/erri120/rpgmpacker/issues?q=is%3Aissue+author%3Aauragamedev">issues&lt;/a> on GitHub driving the development of this project forward.&lt;/p>
&lt;p>With some issues still open I stopped working on this project in April 2021 because I knew I had to rework this tool at some point and didn&amp;rsquo;t had the motivation to do so at that time. I used C++ for 1.x because I wanted to finally build something with this language. I had only done small assignments in Uni with C++ but never done anything more with it, mainly because the language sucks ass.&lt;/p>
&lt;p>C/C++ is old, very old and it clearly shows, not just in the language but the tooling available. Ask 20 C++ developers what build system they use and you will likely get 10 different answers. Working with dependencies is a nightmare when it comes to C/C++ development. It&amp;rsquo;s actually impossible to count the amount of times I wanted to contribute to a C++ project only to be blocked by some weird build system that only work in a specific environment when the stars align and the moon is in the Waxing Gibbous lunar phase. Once you did get something to work you now have to deal with the language itself. Let me ask you this: how do you represent a string in C++? Did you know that there is &lt;code>std::string&lt;/code> which is actually just &lt;code>std::basic_string&amp;lt;char&amp;gt;&lt;/code>, &lt;code>std::u16string&lt;/code> which is &lt;code>std::basic_string&amp;lt;char16_t&amp;gt;&lt;/code>, &lt;code>std::u32string&lt;/code> which is &lt;code>std::basic_string&amp;lt;char32_t&amp;gt;&lt;/code> and &lt;code>std::wstring&lt;/code> which is &lt;code>std::basic_string&amp;lt;wchar_t&amp;gt;&lt;/code> but don&amp;rsquo;t let that fool you because there is also &lt;code>char8_t&lt;/code> from C++ 20 that introduces &lt;code>std::u8string&lt;/code> and don&amp;rsquo;t forget that &lt;code>wchar_t&lt;/code> has different sizes depending on the platform, compiler and time of day.&lt;/p>
&lt;p>C++ is a fucking mess. Working with strings in C++ should not be this hard.&lt;/p>
&lt;p>So lets calm down and look at something different: Rust. I love Rust, it&amp;rsquo;s C++ in way better and more modern. I wanted to rework rpgmpacker in Rust and actually did exactly that for quite some time but soon realized this was also not the way.&lt;/p>
&lt;p>RPG Maker MV/MZ is pure JavaScript with the data files being in JSON. The developers are probably familiar with JavaScript as well so in this ecosystem it is more fitting to create a JavaScript tool. Of course I wouldn&amp;rsquo;t be doing that, fuck vanilla JavaScript, I&amp;rsquo;m using TypeScript.&lt;/p>
&lt;p>I like to use the right tool for the job. Even though I&amp;rsquo;m quite the C# fanatic I went with TypeScript because it makes life very easy. I don&amp;rsquo;t have to write complex JSON parsers or DTOs, I can just do &lt;code>JSON.parse(...)&lt;/code> and access whatever I want. One huge problem was also parsing the plugins for the exclude-unused feature. If you open &lt;code>js/plugins.js&lt;/code> in your game, you will find a variable &lt;code>$plugins&lt;/code>. With TypeScript I can just use the VM to dynamically load this file and access this variable directly. With any other language I would have to read the file as a string and do some complex string parsing.&lt;/p>
&lt;p>Of course there are some problems with TypeScript. I previously complained about the C++ dependency systems but the huge dependency trees you can get when using NPM are also insane. Before I even started on the rework I set my goal to require the least amount of modules which ended up being only 1: &lt;a href="https://www.npmjs.com/package/yargs">yargs&lt;/a> because parsing arguments is not something I wanna implement myself.&lt;/p>
&lt;p>I hope the rework will be received pleasantly by the 3 people using the tool.&lt;/p></content></item><item><title>Don't count frames to calculate time</title><link>https://erri120.github.io/posts/2021-09-29/</link><pubDate>Wed, 29 Sep 2021 16:21:15 +0100</pubDate><guid>https://erri120.github.io/posts/2021-09-29/</guid><description>Time and Frames We have all heard the term FPS, frames per second, which tells us how many frames are rendered on screen within one second. Higher FPS will result in smoother animations because those animations get more frames. The problem with high FPS is that the GPU has to keep up with this demand and be able to produce 30/60/144 or more frames within 1 second. This is where frame times, VSync and a bunch of offer stuff that I won&amp;rsquo;t cover here comes into play.</description><content>&lt;h2 id="time-and-frames">Time and Frames&lt;/h2>
&lt;p>We have all heard the term FPS, frames per second, which tells us how many frames are rendered on screen within one second. Higher FPS will result in smoother animations because those animations get more frames. The problem with high FPS is that the GPU has to keep up with this demand and be able to produce 30/60/144 or more frames within 1 second. This is where frame times, VSync and a bunch of offer stuff that I won&amp;rsquo;t cover here comes into play.&lt;/p>
&lt;p>The important takeaway is that you can not reliably calculate a duration based on how many frames where rendered because not every frame takes the same amount of time. This is a problem when you want to eg smoothly move an object from one position to another. Engines like Unity solve this by providing a delta time &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> which is the interval from the last to the current frame so you can have smooth translations.&lt;/p>
&lt;h2 id="looking-at-rpg-maker-mvmz">Looking at RPG Maker MV/MZ&lt;/h2>
&lt;p>So what issue does RPG Maker have? I have recently played a game for around 21 hours but the save menu displayed over 51 hours, more than double. Actually not just more than double but around 2.4 times more than expected. This quickly made me realize that I had been playing the game on my 144Hz monitor meaning instead of rendering at 60 FPS, the game was rendering at 144 FPS. I hope you notice that &lt;code>60 x 2.4&lt;/code> equals &lt;code>144&lt;/code>.&lt;/p>
&lt;p>To further investigate the problem I took a peek inside the &lt;code>js&lt;/code> folder, did a quick search for &amp;ldquo;playtime&amp;rdquo; and found the culprits of my frustration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">Game_System&lt;/span>.&lt;span style="color:#a6e22e">prototype&lt;/span>.&lt;span style="color:#a6e22e">onBeforeSave&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>() {
&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">_framesOnSave&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">Graphics&lt;/span>.&lt;span style="color:#a6e22e">frameCount&lt;/span>;
&lt;span style="color:#75715e">// ...
&lt;/span>&lt;span style="color:#75715e">&lt;/span>};
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">Game_System&lt;/span>.&lt;span style="color:#a6e22e">prototype&lt;/span>.&lt;span style="color:#a6e22e">onAfterLoad&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>() {
&lt;span style="color:#a6e22e">Graphics&lt;/span>.&lt;span style="color:#a6e22e">frameCount&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">_framesOnSave&lt;/span>;
&lt;span style="color:#75715e">// ...
&lt;/span>&lt;span style="color:#75715e">&lt;/span>};
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">Game_System&lt;/span>.&lt;span style="color:#a6e22e">prototype&lt;/span>.&lt;span style="color:#a6e22e">playtime&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>() {
&lt;span style="color:#66d9ef">return&lt;/span> Math.&lt;span style="color:#a6e22e">floor&lt;/span>(&lt;span style="color:#a6e22e">Graphics&lt;/span>.&lt;span style="color:#a6e22e">frameCount&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span>);
};
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">Game_System&lt;/span>.&lt;span style="color:#a6e22e">prototype&lt;/span>.&lt;span style="color:#a6e22e">playtimeText&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>() {
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">hour&lt;/span> &lt;span style="color:#f92672">=&lt;/span> Math.&lt;span style="color:#a6e22e">floor&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">playtime&lt;/span>() &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span>);
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">min&lt;/span> &lt;span style="color:#f92672">=&lt;/span> Math.&lt;span style="color:#a6e22e">floor&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">playtime&lt;/span>() &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span>) &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span>;
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">sec&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">playtime&lt;/span>() &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span>;
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">hour&lt;/span>.&lt;span style="color:#a6e22e">padZero&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">min&lt;/span>.&lt;span style="color:#a6e22e">padZero&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">sec&lt;/span>.&lt;span style="color:#a6e22e">padZero&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>);
};
&lt;/code>&lt;/pre>&lt;/div>&lt;p>A quick explanation: whenever you save, the game includes the amount of frames it has rendered in the save file because &lt;code>Game_System&lt;/code> is serialized in the save file and &lt;code>_framesOnSave&lt;/code> is a field of that object. Of course when you load the save will get deserialized and &lt;code>Graphics.frameCount&lt;/code> will be set back to that value. In case you are wondering: &lt;code>Graphics.frameCount&lt;/code> gets incremented on each render.&lt;/p>
&lt;p>This is fine so far but the real problems are found in the &lt;code>playtime&lt;/code> and &lt;code>playtimeText&lt;/code> functions where the game assumes you constantly playing at 60 frames per second. The pure &lt;code>frameCount&lt;/code> gets divided by &lt;code>60&lt;/code> to get the amount of seconds passed and in &lt;code>playtimeText&lt;/code> that result is further processed to the get hours and minutes.&lt;/p>
&lt;p>Due to the multiple issues outlined at the beginning you can see that this is not a good idea. Having said that: let&amp;rsquo;s look at how to fix this.&lt;/p>
&lt;h2 id="possible-solution">Possible Solution&lt;/h2>
&lt;p>This solution is probably the easiest and most straightforward one I can think of:&lt;/p>
&lt;ul>
&lt;li>on load/start: set &lt;code>startTime&lt;/code> to the current time&lt;/li>
&lt;li>on save:
&lt;ol>
&lt;li>get the current time and calculate the difference between now and &lt;code>startTime&lt;/code>&lt;/li>
&lt;li>add the difference to a variable in the save&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;p>No need for frame count calculations or anything complex, just use &lt;code>Date.now()&lt;/code> a few times and get the difference.&lt;/p>
&lt;h3 id="changing-the-implementation-in-rpg-maker-mv">Changing the implementation in RPG Maker MV&lt;/h3>
&lt;p>Start by opening &lt;code>js/rpg_objects.js&lt;/code> and look for the &lt;code>initialize&lt;/code> function. Here we want to add two new fields:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">Game_System&lt;/span>.&lt;span style="color:#a6e22e">prototype&lt;/span>.&lt;span style="color:#a6e22e">initialize&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>() {
&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">_startTime&lt;/span> &lt;span style="color:#f92672">=&lt;/span> Date.&lt;span style="color:#a6e22e">now&lt;/span>();
&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">_playtime&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;span style="color:#75715e">// ...
&lt;/span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>Date.now()&lt;/code> returns the current &lt;a href="https://currentmillis.com/">Unix time&lt;/a> as an integer that looks like this: &lt;code>1632928643900&lt;/code>.&lt;/p>
&lt;p>We need to set the start time in the &lt;code>initialize&lt;/code> function for when the game starts and in the &lt;code>onAfterLoad&lt;/code> function for when the player loads a save file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">Game_System&lt;/span>.&lt;span style="color:#a6e22e">prototype&lt;/span>.&lt;span style="color:#a6e22e">onAfterLoad&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>() {
&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">_startTime&lt;/span> &lt;span style="color:#f92672">=&lt;/span> Date.&lt;span style="color:#a6e22e">now&lt;/span>();
&lt;span style="color:#75715e">// ...
&lt;/span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>onBeforeSave&lt;/code> function gets called before the save is serialized so here we have to calculate the time difference and reset the start time:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">Game_System&lt;/span>.&lt;span style="color:#a6e22e">prototype&lt;/span>.&lt;span style="color:#a6e22e">onBeforeSave&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>() {
&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">_playtime&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> Date.&lt;span style="color:#a6e22e">now&lt;/span>() &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">_startTime&lt;/span>;
&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">_startTime&lt;/span> &lt;span style="color:#f92672">=&lt;/span> Date.&lt;span style="color:#a6e22e">now&lt;/span>();
&lt;span style="color:#75715e">// ...
&lt;/span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Assuming the player started at &lt;code>1632928643900&lt;/code> and played for 1 second till &lt;code>1632928644900&lt;/code>, &lt;code>this._playtime&lt;/code> will now be &lt;code>1000&lt;/code>. The only thing remaining is updating the &lt;code>playtime&lt;/code> function:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">Game_System&lt;/span>.&lt;span style="color:#a6e22e">prototype&lt;/span>.&lt;span style="color:#a6e22e">playtime&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>() {
&lt;span style="color:#66d9ef">return&lt;/span> Math.&lt;span style="color:#a6e22e">floor&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">_playtime&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">1000&lt;/span>);
};
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since this function returns the amount of time passed in seconds we have to divide by 1000 to convert from milliseconds to seconds. While we are at it, I also recommend updating &lt;code>playtimeText&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">Game_System&lt;/span>.&lt;span style="color:#a6e22e">prototype&lt;/span>.&lt;span style="color:#a6e22e">playtimeText&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>() {
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">secondsPassed&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">playtime&lt;/span>();
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">minutesPassed&lt;/span> &lt;span style="color:#f92672">=&lt;/span> Math.&lt;span style="color:#a6e22e">floor&lt;/span>(&lt;span style="color:#a6e22e">secondsPassed&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span>);
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">hoursPassed&lt;/span> &lt;span style="color:#f92672">=&lt;/span> Math.&lt;span style="color:#a6e22e">floor&lt;/span>(&lt;span style="color:#a6e22e">minutesPassed&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span>);
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">sec&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">secondsPassed&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span>;
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">min&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">minutesPassed&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span>;
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">hour&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">hoursPassed&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">24&lt;/span>;
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">hour&lt;/span>.&lt;span style="color:#a6e22e">padZero&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">min&lt;/span>.&lt;span style="color:#a6e22e">padZero&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">sec&lt;/span>.&lt;span style="color:#a6e22e">padZero&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>);
};
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The main difference here is that we cache the result from the &lt;code>playtime&lt;/code> function and other operations.&lt;/p>
&lt;h2 id="afterword">Afterword&lt;/h2>
&lt;p>This issue has been bugging me a lot during my playthroughs of longer games because you don&amp;rsquo;t really notice it when your playtime goes from 1h to 2 hours but going from 21 hours to 50+ hours was a bit more in my face. RPG Maker MZ also doesn&amp;rsquo;t fix this and I have not seen any discussion about this.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>See &lt;code>Time.deltaTime&lt;/code> in the docs &lt;a href="https://docs.unity3d.com/ScriptReference/Time-deltaTime.html">here&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></content></item><item><title>CI/CD for RPG Maker Game Development</title><link>https://erri120.github.io/posts/2021-02-04/</link><pubDate>Thu, 04 Feb 2021 15:41:07 +0100</pubDate><guid>https://erri120.github.io/posts/2021-02-04/</guid><description>Automation saves time and therefore money. However you have to ask yourself if it&amp;rsquo;s worth spending hours writing a complex and long script. In the worst case you might end up wasting instead of saving time. Thankfully most programming related tasks can be automated very quickly and each language or framework often has documentation on how to get you up and running.
This is sadly not often the case when it comes to game development.</description><content>&lt;p>Automation saves time and therefore money. However you have to ask yourself if it&amp;rsquo;s worth spending hours writing a complex and long script. In the worst case you might end up wasting instead of saving time. Thankfully most programming related tasks can be automated very quickly and each language or framework often has documentation on how to get you up and running.&lt;/p>
&lt;p>This is sadly not often the case when it comes to game development. Popular engines like Unreal Engine and Unity have automation tools &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> and documentation for automating the build process but less popular ones such as RPG Maker don&amp;rsquo;t have those.&lt;/p>
&lt;p>In this post I will explain what CI/CD means and how to set up a pipeline for RPG Maker MV/MZ with &lt;a href="https://github.com/erri120/rpgmpacker">rpgmpacker&lt;/a>. A big chunk of this post is explaining CI/CD and how RPG Maker MV/MZ works, if you just want to go to the practical part click &lt;a href="#using-rpgmpacker">here&lt;/a>.&lt;/p>
&lt;h2 id="cicd-for-non-programmers">CI/CD for non-programmers&lt;/h2>
&lt;p>RPG Maker is very non-programmer friendly and you can easily end up not having to write a single line of code when creating a game with it. For this reason I want to make sure we all have the same base level understanding of CI/CD before continuing. That being said, I expect you to know about version control with git so make sure to watch these two amazing videos by &lt;a href="https://www.youtube.com/channel/UCsBjURrPoezykLs9EqgamOA">Fireship&lt;/a> if you are unfamiliar with it:&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube-nocookie.com/embed/hwP7WQkmECE" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube-nocookie.com/embed/HkdAHXoRtos" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;p>Let&amp;rsquo;s get started with &lt;strong>Continuous Integration&lt;/strong> which means running a pipeline on every change you commit to a repository. This pipeline consists of one or multiple jobs where one job could be running some tests or building the project. If you run the tests on every change then you can easily track down the commit where a bug was introduced to the codebase. A common pipeline would look like this:&lt;/p>
&lt;ol>
&lt;li>setup (checkout, getting all the tools)&lt;/li>
&lt;li>running tests&lt;/li>
&lt;li>building the project&lt;/li>
&lt;li>packaging&lt;/li>
&lt;li>uploading an artifact (fancy word for an archive containing the output)&lt;/li>
&lt;/ol>
&lt;p>The terminology can be different depending on your provider for example a pipeline on GitHub is called a workflow and each workflow has steps instead of jobs. They often mean the same thing so don&amp;rsquo;t let that confuse you.&lt;/p>
&lt;p>&lt;strong>Continuous Delivery&lt;/strong> is about &lt;em>delivering&lt;/em> the artifact we produced previously. This artifact can be send to testers, friends, the QA team or your mom. &lt;strong>Continuous Deployment&lt;/strong> is also a thing and means actually deploying the artifact by uploading the next release of a game to itch.io or deploying the software to your servers.&lt;/p>
&lt;p>Big studios often end up with huge pipelines because they have many employees and teams. They might have a CI pipeline that runs the tests and builds the project. The artifact would then send in a CD pipeline to the testers or QA team and when they approve of the build it gets released into the world. This is probably not the case for you or your team and most of the time you can combine all of this into one pipeline.&lt;/p>
&lt;p>If you are curious how such a pipeline might look like, here is the GitHub Actions workflow file that builds (CI) and deploys (CD) this site to GitHub Pages on every push to the master branch:&lt;/p>
&lt;div class="collapsable-code">
&lt;input id="729635841" type="checkbox" />
&lt;label for="729635841">
&lt;span class="collapsable-code__language">yaml&lt;/span>
&lt;span class="collapsable-code__title">Example GitHub Actions workflow&lt;/span>
&lt;span class="collapsable-code__toggle" data-label-expand="Show" data-label-collapse="Hide">&lt;/span>
&lt;/label>
&lt;pre class="language-yaml" >&lt;code>
name: Deployment
on:
push:
branches: [ master ]
jobs:
build:
runs-on: ubuntu-latest
steps:
# setup
- uses: actions/checkout@v2
with:
submodules: true
fetch-depth: 0
- name: Setup Hugo
uses: peaceiris/actions-hugo@v2
with:
hugo-version: &amp;#39;latest&amp;#39;
# building the site (CI)
- name: Build
run: hugo --minify
# deploying the site (CD)
- name: Deploy
uses: peaceiris/actions-gh-pages@v3
with:
github_token: ${{ secrets.GITHUB_TOKEN }}
publish_dir: ./public
publish_branch: gh-pages
&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="rpg-maker-mvmz-manual-export">RPG Maker MV/MZ manual export&lt;/h2>
&lt;img src="https://erri120.github.io/img/posts/2021-02-04/RPGMakerMV-Deployment.png" alt="RPG Maker MV Deployment Window" class="left" />
&lt;p>This is the deployment window of RPG Maker MV which you can access in the editor under &lt;em>File -&amp;gt; Deployment&lt;/em>. The major issue with this is the fact you have to use it at all. Software developers love the tools they can use from the command line because they can be easily accessed using a script.&lt;/p>
&lt;p>Other engines likes Unreal Engine have to compile code before deployment but RPG Maker is very different: It&amp;rsquo;s only copying files from one place to another.&lt;/p>
&lt;p>There is no code to compile because all the code is in JavaScript, it doesn&amp;rsquo;t even need to compile an executable because it just uses &lt;a href="https://nwjs.io/">NW.js&lt;/a>. RPG Maker is one of the simplest game engines, not just in terms of usability but how everything is just JSON and JavaScript. You can literally go into the &lt;code>js&lt;/code> folder and look at all the source code of the engine. All the data is saved as JSON so if you want to change the name of an item you can open &lt;code>data/Items.json&lt;/code> and change the values.&lt;/p>
&lt;p>If you are curious where all those files come from, open your RPG Maker MV/MZ installation folder and look for folders that start with &lt;code>nw-js-&lt;/code>. The files inside those folders are copied over to the output directory. You can also find the default template files in the &lt;code>NewData&lt;/code> folders.&lt;/p>
&lt;p>Simply copying files from one place to another can be done with a script. This was exactly what rpgmpacker did in my first prototype but I soon realized that there was more going on.&lt;/p>
&lt;p>First we have file filtering. For audio you can have &lt;code>.ogg&lt;/code> and &lt;code>.m4a&lt;/code> files but exporting for Windows/OSX will only copy the &lt;code>.ogg&lt;/code> files while exporting for Mobile will only copy &lt;code>.m4a&lt;/code> files. Then we have image and audio &amp;ldquo;encryption&amp;rdquo; and the exclude-unused feature which requires parsing of almost all JSON files to figure out which files are actually in use and which are not. There is even more to this which can&amp;rsquo;t be done in a simple script so I decided to build an entire tool which we are going to use in the pipeline.&lt;/p>
&lt;h2 id="creating-a-release-pipeline-for-rpg-maker">Creating a Release Pipeline for RPG Maker&lt;/h2>
&lt;p>The pipeline we are going to build will do the following:&lt;/p>
&lt;ol>
&lt;li>run rpgmpacker&lt;/li>
&lt;li>zip the output&lt;/li>
&lt;li>upload the output to itch.io using &lt;a href="https://itch.io/docs/butler">Butler&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>If your game is not on itch.io then you can leave out the last step or replace it with an upload to MEGA, GDrive or your hosting platform of choice.&lt;/p>
&lt;p>For the pipeline you can write a Bash or PowerShell script, just pick whatever you like more:&lt;/p>
&lt;div class="collapsable-code">
&lt;input id="639875124" type="checkbox" />
&lt;label for="639875124">
&lt;span class="collapsable-code__language">bash&lt;/span>
&lt;span class="collapsable-code__title">Using rpgmpacker in a Bash Script&lt;/span>
&lt;span class="collapsable-code__toggle" data-label-expand="Show" data-label-collapse="Hide">&lt;/span>
&lt;/label>
&lt;pre class="language-bash" >&lt;code>
#!/bin/bash
INPUT=&amp;#34;./MyProject&amp;#34;
OUTPUT=&amp;#34;./build&amp;#34;
RPGMAKER=&amp;#34;M:\\SteamLibrary\\steamapps\\common\\RPG Maker MV&amp;#34;
npx rpgmpacker@latest \
--input &amp;#34;$INPUT&amp;#34; \
--output &amp;#34;$OUTPUT&amp;#34; \
--rpgmaker &amp;#34;$RPGMAKER&amp;#34; \
--exclude \
--noempty \
--debug \
--platforms &amp;#34;Windows&amp;#34; &amp;#34;OSX&amp;#34; &amp;#34;Linux&amp;#34;
&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="collapsable-code">
&lt;input id="815243697" type="checkbox" />
&lt;label for="815243697">
&lt;span class="collapsable-code__language">powershell&lt;/span>
&lt;span class="collapsable-code__title">Using rpgmpacker in a PowerShell Script&lt;/span>
&lt;span class="collapsable-code__toggle" data-label-expand="Show" data-label-collapse="Hide">&lt;/span>
&lt;/label>
&lt;pre class="language-powershell" >&lt;code>
$PROJECT=&amp;#34;./MyProject&amp;#34;
$OUTPUT=&amp;#34;./build&amp;#34;
$RPGMAKER=&amp;#34;M:\\SteamLibrary\\steamapps\\common\\RPG Maker MV&amp;#34;
npx rpgmpacker@latest `
--input $PROJECT `
--output $OUTPUT `
--rpgmaker $RPGMAKER `
--exclude `
--noempty `
--debug `
--platforms &amp;#34;Windows&amp;#34; &amp;#34;OSX&amp;#34; &amp;#34;Linux&amp;#34;
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>In my case I have the project in a folder called &lt;code>MyProject&lt;/code> next to the script and the output should go into the &lt;code>build&lt;/code> folder. I&amp;rsquo;m using the Steam version of RPG Maker MV for this but any version of MV or MZ can be used.&lt;/p>
&lt;p>Next up we want to zip the output. rpgmpacker will create an output folder for each platform you specified so for me I will have &lt;code>build/Windows&lt;/code>, &lt;code>build/OSX&lt;/code> and a &lt;code>build/Linux&lt;/code> folder.&lt;/p>
&lt;div class="collapsable-code">
&lt;input id="631759842" type="checkbox" />
&lt;label for="631759842">
&lt;span class="collapsable-code__language">bash&lt;/span>
&lt;span class="collapsable-code__title">Zipping the output in a Bash Script&lt;/span>
&lt;span class="collapsable-code__toggle" data-label-expand="Show" data-label-collapse="Hide">&lt;/span>
&lt;/label>
&lt;pre class="language-bash" >&lt;code>
for platform in $OUTPUT/*; do
7z a -tzip -o$OUTPUT $platform.zip $platform/*
done
&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="collapsable-code">
&lt;input id="645197328" type="checkbox" />
&lt;label for="645197328">
&lt;span class="collapsable-code__language">powershell&lt;/span>
&lt;span class="collapsable-code__title">Zipping the output in a PowerShell Script&lt;/span>
&lt;span class="collapsable-code__toggle" data-label-expand="Show" data-label-collapse="Hide">&lt;/span>
&lt;/label>
&lt;pre class="language-powershell" >&lt;code>
$Platforms = Get-ChildItem -Path $OUTPUT -Directory -Name
foreach ($platform in $Platforms) {
7z a -tzip -o$OUTPUT $OUTPUT/$platform.zip $OUTPUT/$platform/*
}
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>This is where the difference between PowerShell and Bash start to appear. In Bash we use a glob to get all top-level items of the output directory and in PowerShell we use the &lt;code>Get-ChildItem&lt;/code> function. They look different but they do the same thing with the main difference being that &lt;code>platform&lt;/code> in Bash will be &lt;code>./build/Windows&lt;/code> while &lt;code>$platform&lt;/code> in PowerShell will be just &lt;code>Windows&lt;/code>. This is why we need to prefix &lt;code>$platform&lt;/code> with &lt;code>$OUTPUT/&lt;/code> when calling 7z.&lt;/p>
&lt;p>The pipeline is almost done at this point. Next is publishing the output with &lt;a href="https://itch.io/docs/butler">Butler&lt;/a> to itch.io but if you are not using that platform you are now done.&lt;/p>
&lt;div class="collapsable-code">
&lt;input id="589473126" type="checkbox" />
&lt;label for="589473126">
&lt;span class="collapsable-code__language">bash&lt;/span>
&lt;span class="collapsable-code__title">Downloading Butler in a Bash Script&lt;/span>
&lt;span class="collapsable-code__toggle" data-label-expand="Show" data-label-collapse="Hide">&lt;/span>
&lt;/label>
&lt;pre class="language-bash" >&lt;code>
# see https://broth.itch.ovh/butler
ButlerChannel=&amp;#34;windows-amd64&amp;#34; # darwin-amd64 for Mac and linux-amd64 for Linux
ButlerVersion=&amp;#34;15.21.0&amp;#34;
ButlerOutput=&amp;#34;butler-$ButlerVersion-$ButlerChannel&amp;#34;
if [ ! -d $ButlerOutput ]; then
curl -L -o butler.zip https://broth.itch.ovh/butler/$butlerChannel/$butlerVersion/archive/default
unzip -o butler.zip -d $ButlerOutput
rm butler.zip
else
echo &amp;#34;Butler version $ButlerVersion ($ButlerChannel) has already been downloaded&amp;#34;
fi
# change butler.exe to just butler if you are on Unix
butler=&amp;#34;$ButlerOutput/butler.exe&amp;#34;
&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="collapsable-code">
&lt;input id="273846951" type="checkbox" />
&lt;label for="273846951">
&lt;span class="collapsable-code__language">powershell&lt;/span>
&lt;span class="collapsable-code__title">Downloading Buttler in a PowerShell Script&lt;/span>
&lt;span class="collapsable-code__toggle" data-label-expand="Show" data-label-collapse="Hide">&lt;/span>
&lt;/label>
&lt;pre class="language-powershell" >&lt;code>
# see https://broth.itch.ovh/butler
$ButlerChannel=&amp;#34;windows-amd64&amp;#34; # darwin-amd64 for Mac and linux-amd64 for Linux
$ButlerVersion=&amp;#34;15.21.0&amp;#34;
$ButlerOutput=&amp;#34;butler-$ButlerVersion-$ButlerChannel&amp;#34;
if (![System.IO.Directory]::Exists($ButlerOutput)) {
Invoke-WebRequest -OutFile butler.zip &amp;#34;https://broth.itch.ovh/butler/$butlerChannel/$butlerVersion/archive/default&amp;#34;
Expand-Archive -Path butler.zip $ButlerOutput
Remove-Item -Path butler.zip
} else {
Write-Output &amp;#34;Butler version $ButlerVersion ($ButlerChannel) has already been downloaded&amp;#34;
}
# change butler.exe to just butler if you are on Unix
$butler=&amp;#34;$ButlerOutput/butler.exe&amp;#34;
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>If you are not on windows you should change the &lt;code>ButlerChannel&lt;/code> variable to &lt;code>darwin-amd64&lt;/code> or &lt;code>linux-amd64&lt;/code> depending on your system. I recommend checking &lt;a href="https://broth.itch.ovh/butler">the channel list&lt;/a> of Butler if you need something different. I&amp;rsquo;ve added a simple check so we don&amp;rsquo;t download Butler whenever we call the script. Before we continue you should get an API key from &lt;a href="https://itch.io/user/settings/api-keys">itch.io&lt;/a>. You should treat API keys like passwords and should never make them public. A good way of storing API keys is with environment variables and Butler expects the API key to be stored in the &lt;code>BUTLER_API_KEY&lt;/code> environment variable.&lt;/p>
&lt;div class="collapsable-code">
&lt;input id="961354278" type="checkbox" />
&lt;label for="961354278">
&lt;span class="collapsable-code__language">bash&lt;/span>
&lt;span class="collapsable-code__title">Using Buttler in a Bash Script&lt;/span>
&lt;span class="collapsable-code__toggle" data-label-expand="Show" data-label-collapse="Hide">&lt;/span>
&lt;/label>
&lt;pre class="language-bash" >&lt;code>
export BUTLER_API_KEY=&amp;#34;YOUR_KEY&amp;#34;
ButlerProject=&amp;#34;YOUR_USERNAME/YOUR_PROJECT_NAME&amp;#34;
./$butler login
./$butler push $OUTPUT/Windows $ButlerProject:windows-beta
./$butler push $OUTPUT/OSX $ButlerProject:osx-beta
./$butler push $OUTPUT/Linux $ButlerProject:linux-beta
&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="collapsable-code">
&lt;input id="367951428" type="checkbox" />
&lt;label for="367951428">
&lt;span class="collapsable-code__language">powershell&lt;/span>
&lt;span class="collapsable-code__title">Using Buttler in a PowerShell Script&lt;/span>
&lt;span class="collapsable-code__toggle" data-label-expand="Show" data-label-collapse="Hide">&lt;/span>
&lt;/label>
&lt;pre class="language-powershell" >&lt;code>
$env:BUTLER_API_KEY=&amp;#34;YOUR_KEY&amp;#34;
$ButlerProject=&amp;#34;YOUR_USERNAME/YOUR_PROJECT_NAME&amp;#34;
&amp;amp;$butler login
&amp;amp;$butler push $OUTPUT/Windows.zip &amp;#34;${ButlerProject}:windows-beta&amp;#34;
&amp;amp;$butler push $OUTPUT/OSX.zip &amp;#34;${ButlerProject}:osx-beta&amp;#34;
&amp;amp;$butler push $OUTPUT/Linux.zip &amp;#34;${ButlerProject}:linux-beta&amp;#34;
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>I recommend that you look at the &lt;a href="https://itch.io/docs/butler/pushing.html">Butler Docs&lt;/a> for the different channels you can push to. To recap here are both complete scripts:&lt;/p>
&lt;h3 id="finished-scripts">Finished Scripts&lt;/h3>
&lt;div class="collapsable-code">
&lt;input id="238167495" type="checkbox" />
&lt;label for="238167495">
&lt;span class="collapsable-code__language">bash&lt;/span>
&lt;span class="collapsable-code__title">Bash Script&lt;/span>
&lt;span class="collapsable-code__toggle" data-label-expand="Show" data-label-collapse="Hide">&lt;/span>
&lt;/label>
&lt;pre class="language-bash" >&lt;code>
#!/bin/bash
INPUT=&amp;#34;./MyProject&amp;#34;
OUTPUT=&amp;#34;./build&amp;#34;
RPGMAKER=&amp;#34;M:\\SteamLibrary\\steamapps\\common\\RPG Maker MV&amp;#34;
npx rpgmpacker@latest \
--input &amp;#34;$INPUT&amp;#34; \
--output &amp;#34;$OUTPUT&amp;#34; \
--rpgmaker &amp;#34;$RPGMAKER&amp;#34; \
--exclude \
--noempty \
--debug \
--platforms &amp;#34;Windows&amp;#34; &amp;#34;OSX&amp;#34; &amp;#34;Linux&amp;#34;
for platform in $OUTPUT/*; do
7z a -tzip -o$OUTPUT $platform.zip $platform/*
done
# see https://broth.itch.ovh/butler
ButlerChannel=&amp;#34;windows-amd64&amp;#34; # darwin-amd64 for Mac and linux-amd64 for Linux
ButlerVersion=&amp;#34;15.21.0&amp;#34;
ButlerOutput=&amp;#34;butler-$ButlerVersion-$ButlerChannel&amp;#34;
if [ ! -d $ButlerOutput ]; then
curl -L -o butler.zip https://broth.itch.ovh/butler/$butlerChannel/$butlerVersion/archive/default
unzip -o butler.zip -d $ButlerOutput
rm butler.zip
else
echo &amp;#34;Butler version $ButlerVersion ($ButlerChannel) has already been downloaded&amp;#34;
fi
# change butler.exe to just butler if you are on Unix
butler=&amp;#34;$ButlerOutput/butler.exe&amp;#34;
export BUTLER_API_KEY=&amp;#34;YOUR_KEY&amp;#34;
ButlerProject=&amp;#34;YOUR_USERNAME/YOUR_PROJECT_NAME&amp;#34;
./$butler login
./$butler push $OUTPUT/Windows $ButlerProject:windows-beta
./$butler push $OUTPUT/OSX $ButlerProject:osx-beta
./$butler push $OUTPUT/Linux $ButlerProject:linux-beta
&lt;/code>&lt;/pre>
&lt;/div>
&lt;div class="collapsable-code">
&lt;input id="163248579" type="checkbox" />
&lt;label for="163248579">
&lt;span class="collapsable-code__language">powershell&lt;/span>
&lt;span class="collapsable-code__title">PowerShell Script&lt;/span>
&lt;span class="collapsable-code__toggle" data-label-expand="Show" data-label-collapse="Hide">&lt;/span>
&lt;/label>
&lt;pre class="language-powershell" >&lt;code>
$PROJECT=&amp;#34;./MyProject&amp;#34;
$OUTPUT=&amp;#34;./build&amp;#34;
$RPGMAKER=&amp;#34;M:\\SteamLibrary\\steamapps\\common\\RPG Maker MV&amp;#34;
npx rpgmpacker@latest `
--input $PROJECT `
--output $OUTPUT `
--rpgmaker $RPGMAKER `
--exclude `
--noempty `
--debug `
--platforms &amp;#34;Windows&amp;#34; &amp;#34;OSX&amp;#34; &amp;#34;Linux&amp;#34;
$Platforms = Get-ChildItem -Path $OUTPUT -Directory -Name
foreach ($platform in $Platforms) {
7z a -tzip -o$OUTPUT $OUTPUT/$platform.zip $OUTPUT/$platform/*
}
# see https://broth.itch.ovh/butler
$ButlerChannel=&amp;#34;windows-amd64&amp;#34; # darwin-amd64 for Mac and linux-amd64 for Linux
$ButlerVersion=&amp;#34;15.21.0&amp;#34;
$ButlerOutput=&amp;#34;butler-$ButlerVersion-$ButlerChannel&amp;#34;
if (![System.IO.Directory]::Exists($ButlerOutput)) {
Invoke-WebRequest -OutFile butler.zip &amp;#34;https://broth.itch.ovh/butler/$butlerChannel/$butlerVersion/archive/default&amp;#34;
Expand-Archive -Path butler.zip $ButlerOutput
Remove-Item -Path butler.zip
} else {
Write-Output &amp;#34;Butler version $ButlerVersion ($ButlerChannel) has already been downloaded&amp;#34;
}
# change butler.exe to just butler if you are on Unix
$butler=&amp;#34;$ButlerOutput/butler.exe&amp;#34;
$env:BUTLER_API_KEY=&amp;#34;YOUR_KEY&amp;#34;
$ButlerProject=&amp;#34;YOUR_USERNAME/YOUR_PROJECT_NAME&amp;#34;
&amp;amp;$butler login
&amp;amp;$butler push $OUTPUT/Windows.zip &amp;#34;${ButlerProject}:windows-beta&amp;#34;
&amp;amp;$butler push $OUTPUT/OSX.zip &amp;#34;${ButlerProject}:osx-beta&amp;#34;
&amp;amp;$butler push $OUTPUT/Linux.zip &amp;#34;${ButlerProject}:linux-beta&amp;#34;
&lt;/code>&lt;/pre>
&lt;/div>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>I hope this blog post helped you with getting a CI/CD pipeline up and running for your RPG Maker game. Please let me know if you end up using this tool for your next project. The author of &lt;a href="https://aura-dev.itch.io/star-knightess-aura">Star Knightess Aura (NSFW)&lt;/a> was one of the earliest users and you can find their pipeline in this repo on &lt;a href="https://gitgud.io/aura-dev/star_knightess_aura/-/tree/develop">gitgud&lt;/a>.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>Unreal Engine has &lt;a href="https://docs.unrealengine.com/4.27/en-US/ProductionPipelines/BuildTools/AutomationTool/">Automation Tools&lt;/a> and Unity has a &lt;a href="https://docs.unity3d.com/Manual/CommandLineArguments.html">CLI&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></content></item><item><title>Utilizing Image Steganography in Games</title><link>https://erri120.github.io/posts/2021-01-27/</link><pubDate>Wed, 27 Jan 2021 10:08:08 +0100</pubDate><guid>https://erri120.github.io/posts/2021-01-27/</guid><description>Image Steganography is nothing new or ground-breaking, it existed since 440 BC 1 and digital steganography started appearing once personal computers became a thing. This little post is about the methods used by Illusion for their games &amp;ldquo;Koikatsu!&amp;rdquo; and &amp;ldquo;AI Shoujo&amp;rdquo; and the benefits it provides.
Character Presets and PNGs Most games by Illusion are sandboxy, they have an active modding community provide an extensive character creation tool that can export your preset.</description><content>&lt;p>Image Steganography is nothing new or ground-breaking, it existed since 440 BC &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> and digital steganography started appearing once personal computers became a thing. This little post is about the methods used by Illusion for their games &amp;ldquo;Koikatsu!&amp;rdquo; and &amp;ldquo;AI Shoujo&amp;rdquo; and the benefits it provides.&lt;/p>
&lt;h2 id="character-presets-and-pngs">Character Presets and PNGs&lt;/h2>
&lt;p>Most games by Illusion are &lt;em>sandboxy&lt;/em>, they have an active modding community provide an extensive character creation tool that can export your preset. I come from Skyrim where exporting a character preset created with &lt;a href="https://www.nexusmods.com/skyrimspecialedition/mods/19080">RaceMenu&lt;/a> results in a JSON file full of instructions for the mod but not for the user. If you were to just give the JSON file to someone they won&amp;rsquo;t know how the character looks until they start the game and load the preset. This means you have to include screenshots and the JSON file but that makes Discord preset sharing channels very cluttered.&lt;/p>
&lt;p>So what does Illusion do? They just give you a single PNG file:&lt;/p>
&lt;img src="https://erri120.github.io/img/posts/2021-01-27/Mona.png" alt="Mona Preset" class="left" />
&lt;p>If you own Koikatsu! then you can just download this image, put it inside your preset folder and it will just work in-game. Of course I immediately opened a my hex editor of choice, &lt;a href="https://mh-nexus.de/en/hxd/">HxD&lt;/a>, and looked through the data to find what was going on:&lt;/p>
&lt;img src="https://erri120.github.io/img/posts/2021-01-27/preset-in-hxd.png" alt="Mona Preset in HxD" class="left" />
&lt;p>It turns out that the data for the preset was appended to the end of the PNG. As you can see in the preview above, this does not affect the render in any way because the parser will just stop at the &lt;code>IEND&lt;/code> marker. I found out that FFmpeg does not like this extra data at the end and tries to parse another PNG instead of exiting:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">[png @ 000001f2aeb65500] Invalid PNG signature 0x6400000012E38090.
[png @ 000001f2aec0e2c0] Invalid PNG signature 0xE300000081A76C73.
[png @ 000001f2aec11500] Invalid PNG signature 0xA946616365556E64.
[png @ 000001f2aec0fd40] Invalid PNG signature 0xA74579654F766572.
[png @ 000001f2aec10940] Invalid PNG signature 0xD928636F6D2E6765.
[png @ 000001f2aec10140] Invalid PNG signature 0xC2A963745F676C6F.
[png @ 000001f2aec11100] Invalid PNG signature 0xC3AE63745F73686F.
[png @ 000001f2aec10540] Invalid PNG signature 0xCC6001D023D8950.
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="rewarding-simplicity">Rewarding Simplicity&lt;/h2>
&lt;p>You might think &amp;ldquo;&lt;em>So what&amp;rsquo;s the deal?&lt;/em>&amp;rdquo; and that is the point: it is simple to implement and a good solution to the problem of sharing presets, however it is not apparent.&lt;/p>
&lt;p>I hope you found this somewhat interesting, if you work on a game that has presets and you don&amp;rsquo;t know how to export them, maybe this has sparked your interest and provided a solution.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>The first recorded use can be traced back to 440 BC in Greece, see &lt;a href="https://en.wikipedia.org/wiki/Steganography#History">Wikipedia&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></content></item></channel></rss>